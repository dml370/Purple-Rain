# Production Dockerfile for AI Companion

FROM python:3.11-slim

# Set working directory

WORKDIR /app

# Set environment variables

ENV PYTHONUNBUFFERED=1
ENV FLASK_ENV=production
ENV PORT=5001

# Install system dependencies

RUN apt-get update && apt-get install -y   
gcc   
g++   
curl   
wget   
gnupg   
unzip   
&& rm -rf /var/lib/apt/lists/*

# Install Chrome for Selenium

RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -   
&& echo “deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main” >> /etc/apt/sources.list.d/google.list   
&& apt-get update   
&& apt-get install -y google-chrome-stable   
&& rm -rf /var/lib/apt/lists/*

# Install ChromeDriver

RUN CHROMEDRIVER_VERSION=`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE` &&   
wget -N http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip &&   
unzip chromedriver_linux64.zip &&   
rm chromedriver_linux64.zip &&   
mv chromedriver /usr/local/bin/chromedriver &&   
chmod +x /usr/local/bin/chromedriver

# Copy requirements first for better caching

COPY requirements.txt .

# Install Python dependencies

RUN pip install –no-cache-dir -r requirements.txt

# Copy application code

COPY . .

# Create directory for logs

RUN mkdir -p /app/logs

# Create non-root user for security

RUN adduser –disabled-password –gecos ‘’ appuser &&   
chown -R appuser:appuser /app
USER appuser

# Expose port

EXPOSE 5001

# Health check

HEALTHCHECK –interval=30s –timeout=30s –start-period=5s –retries=3   
CMD curl -f http://localhost:5001/health || exit 1

# Start command

CMD [“gunicorn”, “–bind”, “0.0.0.0:5001”, “–workers”, “4”, “–timeout”, “120”, “app:app”]